seam-java:
  metadata:
    description: This ruleset provides generic migration knowledge from the Seam 2
      API to pure Java EE/CDI API.
    sourceTechnologies:
    - id: java-ee
      versionRange: null
    - id: eap
      versionRange: '[4,6)'
    - id: seam
      versionRange: '[2.0,2.1,2.2,2.3]'
    tags: []
    targetTechnologies:
    - id: eap
      versionRange: '[6,8)'
  original-file: https://github.com/windup/windup-rulesets/tree/master/rules-reviewed/eap6/java-ee/seam/seam-java.windup.xml
  rules:
    seam-java-00000:
      perform:
        classification:
          category-id: mandatory
          description: 'Seam 2.2 and earlier is not supported on JBoss EAP 6 and above.
            Consider migration to Context Dependency Injection (CDI) standard which
            covers most of Seam 2 core functionalities in a standardized, type safe
            and extensible way. Seam 2.3 still could work on EAP 6.x, but is not maintained
            and officially supported on new EAP 6.x patched releases or EAP 7.x. There
            are two options available: 1. Continue using Seam 2.x on EAP 6 but expect
            there are bugs or glitches and you need to fix it yourself. This approach
            is sometimes lower effort but the application will not use a tested and
            supported library and some Seam framework features doesn''t have to work
            as expected. 2. The similar approach as for point 1 but for Seam 2.3 runtime
            on EAP7 is not verified and therefore not recommended. Some Seam 2.3 features
            could work on EAP7, but the expected behavior can differ based on what
            your application uses and how. 2. Switch to standard CDI beans and migrate
            to JSF 2.2 if your server platform is EAP 7+. This will require significant
            migration effort.'
          effort: '5'
          links:
          - href: https://access.redhat.com/documentation/en-us/Red_Hat_JBoss_Web_Framework_Kit/2.7/html-single/Seam_Guide/index.html#idm54350960
            title: Migration from Seam 2 to Java EE and Alternatives
          - href: https://access.redhat.com/documentation/en-us/Red_Hat_JBoss_Web_Framework_Kit/2.7/html-single/Seam_Guide/index.html#booking
            title: JSF Web Application Example
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/6.4/html/development_guide/sect-use_cdi#sect-Contexts_Scopes_and_Dependencies
            title: JBoss EAP 6 - Contexts, Scopes, and Dependencies
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/6.4/html-single/migration_guide/index#sect-JSF_changes
            title: Enable Applications To Use Older Versions of JSF
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.0/html-single/migration_guide/#migrate-eap5-component-upgrade-reference
            title: JBoss EAP 5 Component Upgrade Reference
          - href: https://access.redhat.com/solutions/2773121
            title: How to use JSF 1.2 with EAP 7?
          tags:
          - cdi
          - seam
          - jsf
          title: Seam API
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.{*}
      where: {}
    seam-java-00010:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: http://docs.oracle.com/javaee/7/api/javax/enterprise/context/Conversation.html
            title: Java EE API - Conversation
          message: 'You can use Java EE `javax.enterprise.context.Conversation` interface
            like: ```java @Inject Conversation conversation; ```'
          tags:
          - seam
          - cdi
          title: Seam API - org.jboss.seam.core.Conversation
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.core.Conversation
      where: {}
    seam-java-00030:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: http://docs.oracle.com/javaee/7/api/javax/enterprise/inject/spi/BeanManager.html
            title: Java EE API - BeanManager
          - href: https://access.redhat.com/documentation/en-us/Red_Hat_JBoss_Web_Framework_Kit/2.7/html-single/Seam_API_Documentation/files/api/org/jboss/seam/Seam.html
            title: Seam API - org.jboss.seam.Seam
          message: There is no direct replacement for this Seam API. The `org.jboss.seam.Seam`
            contains methods for accessing annotated information about Seam component
            classes. For majority cases you can replace this Seam API with standard
            CDI's `javax.enterprise.inject.spi.BeanManager`.
          tags:
          - seam
          - cdi
          title: Seam API - org.jboss.seam.Seam
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.Seam.{*}
        location: METHOD_CALL
      where: {}
    seam-java-00040:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: http://docs.oracle.com/javaee/7/tutorial/cdi-basic009.htm#GJBAK
            title: Java EE 7 tutorial - Giving Beans EL Name
          - href: https://access.redhat.com/documentation/en-us/Red_Hat_JBoss_Web_Framework_Kit/2.7/html-single/Seam_Guide/index.html#_seam_2_components
            title: Seam 2 Components
          message: CDI supports static injection in comparison to Seam 2 dynamic injection.
            So you don't need to have `@Named` annotation on every Seam component
            you would like to migrate. Remove that annotation or change to `@javax.inject.Named`
            only if you need to access managed bean in Expression Language (EL).
          tags:
          - seam
          - cdi
          title: Seam API - org.jboss.seam.annotations.Name
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.Name
        location: ANNOTATION
      where: {}
    seam-java-00050:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/Red_Hat_JBoss_Web_Framework_Kit/2.7/html-single/Seam_Guide/index.html#_scopes_and_contexts
            title: Scopes and contexts
          - href: http://docs.oracle.com/javaee/7/tutorial/cdi-basic008.htm#GJBBK
            title: Java EE 7 Tutorial - Using Scopes
          message: Convert to a valid CDI scope. CDI scopes has its own annotation.
            See linked documentation link for CDI alternatives. For example, `@Scope(ScopeType.SESSION)`
            should be `@javax.enterprise.context.SessionScoped`.
          tags:
          - seam
          - cdi
          title: Seam API - org.jboss.seam.annotations.Scope
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.Scope
        location: ANNOTATION
      where: {}
    seam-java-00060:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: http://docs.oracle.com/javaee/7/tutorial/cdi-basic007.htm#GJBAN
            title: Java EE Tutorial - Injecting Beans
          message: Convert Seam annotation `@In` to CDI `@javax.inject.Inject`.
          tags:
          - seam
          - cdi
          title: Seam API - org.jboss.seam.annotations.In
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.In
        location: ANNOTATION
      where: {}
    seam-java-00061:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: http://docs.oracle.com/javaee/7/tutorial/cdi-basic007.htm#GJBAN
            title: Java EE Tutorial - Injecting Beans
          message: Remove this Seam annotation `@AutoCreate` as in CDI it is no longer
            needed since a bean will always be created when needed.
          tags:
          - seam
          - cdi
          title: Seam API - org.jboss.seam.annotations.AutoCreate
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.AutoCreate
        location: ANNOTATION
      where: {}
    seam-java-00070:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links:
          - href: http://docs.oracle.com/javaee/7/tutorial/cdi-adv003.htm#GKGKV
            title: Java EE Tutorial - Producers
          - href: https://access.redhat.com/documentation/en-us/Red_Hat_JBoss_Web_Framework_Kit/2.7/html-single/Seam_Guide/index.html#_bijection
            title: Seam Outjection
          - href: http://docs.oracle.com/javaee/7/api/javax/enterprise/inject/Produces.html
            title: Java EE API - Annotation Type Produces
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/6.4/html-single/development_guide/#Use_a_Producer_Method
            title: JBoss EAP 6 - Use a Producer Method
          message: CDI does not support bijection and does a static injection in comparison
            to Seam 2, where it is performed dynamically via interceptor every time
            a component is invoked. CDI performs the static injection only once per
            component life cycle. Refactor such Seam API usage with `@javax.enterprise.inject.Produces`.
          tags:
          - seam
          - cdi
          title: Seam API - org.jboss.seam.annotations.Out
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.Out
        location: ANNOTATION
      where: {}
    seam-java-00071:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links:
          - href: https://access.redhat.com/documentation/en-us/Red_Hat_JBoss_Web_Framework_Kit/2.7/html-single/Seam_Guide/index.html#idp227074592
            title: WFK Seam Guide - Seam Factory and Managers components
          - href: http://docs.oracle.com/javaee/7/tutorial/cdi-adv003.htm#GKGKV
            title: Java EE Tutorial - Producers
          - href: http://docs.oracle.com/javaee/7/api/javax/enterprise/inject/Produces.html
            title: Java EE API - Annotation Type Produces
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/6.4/html-single/development_guide/#Use_a_Producer_Method
            title: JBoss EAP 6 - Use a Producer Method
          message: 'Seam Factory annotation was used for binding non Seam component
            methods into Seam context life cycle. Replace it with `@javax.enterprise.inject.Produces`
            and add additional annotation for context scope if you used `scope = ScopeType.*`
            enum like for instance `@Factory(scope = ScopeType.APPLICATION)` use:
            ```java @Produces @ApplicationScoped ... ```'
          tags:
          - seam
          - cdi
          title: Seam API - org.jboss.seam.annotations.Factory
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.Factory
        location: ANNOTATION
      where: {}
    seam-java-00080:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: http://docs.oracle.com/javaee/7/api/javax/ejb/Startup.html
            title: Java EE 7 - Startup annotation
          - href: http://docs.oracle.com/javaee/7/api/javax/ejb/Singleton.html
            title: Java EE 7 - Singleton annotation
          - href: https://access.redhat.com/documentation/en-us/Red_Hat_JBoss_Web_Framework_Kit/2.7/html-single/Seam_Guide/index.html#_startup
            title: WFK Seam Guide - Migration of @Install
          message: Java EE uses for such use case `@javax.ejb.Singleton` and `@javax.ejb.Startup`
            annotations.
          tags:
          - seam
          title: Seam API - org.jboss.seam.annotations.Startup
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.Startup
        location: ANNOTATION
      where: {}
    seam-java-00090:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: http://docs.oracle.com/javaee/7/api/javax/annotation/PostConstruct.html
            title: Java EE API - javax.annotation.PostConstruct
          message: Seam 2 provided along to standard Java EE `javax.annotation.PostConstruct`
            also Seam specific annotation `@Create`. You can use `@javax.annotation.PostConstruct`
            as one to one replacement.
          tags:
          - seam
          - javaee
          title: Seam API - org.jboss.seam.annotations.Create
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.Create
        location: ANNOTATION
      where: {}
    seam-java-00091:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: http://docs.oracle.com/javaee/7/api/javax/annotation/PreDestroy.html
            title: Java EE API - javax.annotation.PreDestroy
          message: Seam 2 provided along to standard Java EE `javax.annotation.PreDestroy`
            also Seam specific annotation `@Destroy`. You can use `@javax.annotation.PreDestroy`
            as one to one replacement.
          tags:
          - seam
          - javaee
          title: Seam API - org.jboss.seam.annotations.Destroy
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.Destroy
        location: ANNOTATION
      where: {}
    seam-java-00100:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: http://www.andygibson.net/blog/tutorial/cdi-conversations-part-2/
            title: CDI Conversations  Blog post
          message: There is no direct replacement, but it can be implemented with
            CDI Conversation support.
          tags:
          - seam
          - cdi
          - conversation
          title: Seam API - org.jboss.seam.faces.Switcher
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.faces.Switcher
      where: {}
    seam-java-00110:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: http://docs.oracle.com/javaee/7/api/javax/enterprise/inject/Instance.html
            title: Java EE API - Interface Instance
          - href: http://docs.oracle.com/javaee/7/api/javax/enterprise/inject/spi/BeanManager.html
            title: Java EE API - BeanManager
          message: 'If you need to keep programmatic lookup use `javax.enterprise.inject.Instance`
            with injection. Like getting instance of `PaymentProcessor`: ```java @Inject
            Instance<PaymentProcessor> paymentProcessor; ``` The second approach is
            to use `javax.enterprise.inject.spi.BeanManager` like ```java @Inject
            BeanManager manager; ```'
          tags:
          - seam
          - cdi
          title: Seam API - org.jboss.seam.Component calls
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.Component.{*}
        location: METHOD_CALL
      where: {}
    seam-java-00120:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links: []
          message: Refactor to have annotated error handler which redirect to a viewID
            page for displaying error page.
          tags:
          - seam
          title: Seam API - org.jboss.seam.annotations.Redirect
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.exception.Redirect
        location: ANNOTATION
      where: {}
    seam-java-00130:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/Red_Hat_JBoss_Web_Framework_Kit/2.7/html-single/Seam_Guide/index.html#_install
            title: WFK Seam Guide - Component installation
          - href: http://docs.oracle.com/javaee/7/api/javax/enterprise/inject/Vetoed.html
            title: Java EE 7 - Vetoed Annotation
          - href: http://docs.oracle.com/javaee/7/api/javax/enterprise/inject/Specializes.html
            title: Java EE 7 - Specializes annotation
          - href: http://docs.oracle.com/javaee/7/api/javax/enterprise/inject/Alternative.html
            title: Java EE 7 - Alternative annotation
          message: Seam 2 offers the `@Install` annotation for controlling whether
            a given bean should be installed or not together with configurable functionality.
            Explicit prevention from installation is in CDI done by `@Vetoed` annotation.
            If you need to use Bean specialization there are `@javax.enterprise.inject.Alternative`
            or `@javax.enterprise.inject.Specializes` instead of precedence.
          tags:
          - seam
          - cdi
          title: Seam API - org.jboss.seam.annotations.Install
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.Install
        location: ANNOTATION
      where: {}
    seam-java-00140:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://docs.oracle.com/javaee/7/tutorial/servlets006.htm#BNAGB
            title: Java EE Tutorial - Filtering Requests and Responses
          message: Rework code with a default Java Servlet `javax.servlet.Filter`
            or different filter interface.
          tags:
          - seam
          - javaee
          title: Seam API - org.jboss.seam.web.AbstractFilter
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.web.AbstractFilter
      where: {}
    seam-java-00150:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://docs.oracle.com/javaee/7/tutorial/servlets006.htm#BNAGB
            title: Java EE Tutorial - Filtering Requests and Responses
          message: Replace this Seam annotation with default Java Servlet `javax.servlet.Filter`
            or different filter interface.
          tags:
          - seam
          - javaee
          - servlet
          title: Seam API - org.jboss.seam.annotations.web.Filter
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.web.Filter
        location: ANNOTATION
      where: {}
    seam-java-00160:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/6.4/html/development_guide/sect-use_cdi#sect-Contexts_Scopes_and_Dependencies
            title: JBoss EAP 6 - Contexts, Scopes, and Dependencies
          message: Rework using CDI's injected concrete context.
          tags:
          - seam
          title: Seam API - org.jboss.seam.contexts.Contexts
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.contexts.Contexts.{*}
        location: METHOD_CALL
      where: {}
    seam-java-00170:
      perform:
        classification:
          category-id: mandatory
          description: Seam integration with jBPM should be migrated with help of
            CDI integration presented directly in Drools - jBPM
          effort: '5'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_bpm_suite/6.4/html-single/development_guide/index#sect_cdi_integration
            title: JBoss BPM Suite 6 - CDI integration
          tags:
          - cdi
          - seam
          - jbpm
          title: Seam integration with jBPM
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.bpm.{*}
        location: ANNOTATION
      where: {}
    seam-java-00180:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: http://docs.oracle.com/javaee/7/api/javax/enterprise/context/Conversation.html
            title: Java EE API - Conversation
          message: Rework with CDI conversation context `javax.enterprise.context.Conversation`.
          tags:
          - seam
          - cdi
          title: Seam API - org.jboss.seam.core.ConversationEntry
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.core.ConversationEntry
      where: {}
    seam-java-00190:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: http://docs.oracle.com/javaee/7/api/javax/enterprise/context/Conversation.html#begin--
            title: Java EE API - Conversation.begin()
          message: Rework with `javax.enterprise.context.Conversation.begin()`.
          tags:
          - cdi
          - seam
          title: Seam API - org.jboss.seam.annotations.Begin
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.Begin
        location: ANNOTATION
      where: {}
    seam-java-00200:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: http://docs.oracle.com/javaee/7/api/javax/enterprise/context/Conversation.html#end--
            title: Java EE API - Conversation.begin()
          message: Rework with `javax.enterprise.context.Conversation.end()`.
          tags:
          - cdi
          - seam
          title: Seam API - org.jboss.seam.annotations.End
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.End
        location: ANNOTATION
      where: {}
    seam-java-00210:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/Red_Hat_JBoss_Web_Framework_Kit/2.7/html-single/Seam_Guide/index.html#_requestparameter
            title: WFK Seam Guide - Migration of @RequestParam
          - href: https://docs.oracle.com/javaee/7/javaserver-faces-2-2/vdldocs-facelets/toc.htm
            title: JSF 2.2 VDL - Tag viewParam
          message: The `@RequestParameter` annotation triggers injection of an HTTP
            request parameter. The parameter name can be set explicitly as a value
            of the annotation or can be implied from the name of an injection point.
            Java EE 6 does not have an annotation for this, however, the JSF 2 spec
            now has `<f:viewParam />` which can be used instead.
          tags:
          - seam
          - jsf
          title: Seam API - org.jboss.seam.annotations.web.RequestParameter
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.web.RequestParameter
        location: ANNOTATION
      where: {}
    seam-java-00220:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/Red_Hat_JBoss_Web_Framework_Kit/2.7/html-single/Seam_Guide/index.html#_logger
            title: WFK Seam Guide - Migration of @Logger
          - href: http://docs.oracle.com/javaee/7/api/javax/enterprise/inject/Produces.html
            title: Java EE 7 - Produces annotation
          message: 'Seam 2 provides a built-in logger implementation. It is a thin
            wrapper that delegates to an available logging framework (log4j or JDK
            logging). Additionally, it provides extra features such as EL expression
            evaluation. Java SE or EE does not have anything that correlates to this,
            but you can your own Logger with simple producer for this case like: ```java
            import javax.enterprise.inject.Produces; import javax.enterprise.inject.spi.InjectionPoint;
            @Singleton public class LoggerProducer { @Produces Logger createLogger(final
            InjectionPoint ip){ return LoggerFactory.getLogger(ip.getMember().getDeclaringClass());
            } } ``` and use it in your code like: ```java @Inject private transient
            Logger logger; ```'
          tags:
          - seam
          - cdi
          title: Seam API - org.jboss.seam.annotations.Logger
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.Logger
        location: ANNOTATION
      where: {}
    seam-java-00230:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/Red_Hat_JBoss_Web_Framework_Kit/2.7/html-single/Seam_Guide/index.html#idm40851856
            title: WFK Seam Guide - Annotations for use with dataTable
          - href: http://docs.oracle.com/javaee/7/tutorial/jsf-custom012.htm#BNATI
            title: Java EE - Binding Component Values and Instances to Managed Bean
              Properties
          message: In Java EE, the Expression Language Specification has evolved and
            allows parameters to be passed to EL method expressions. This approach
            should be used as a replacement for the `@DataModel*` functionality.
          tags:
          - seam
          - jsf
          title: Seam API - org.jboss.seam.annotations.datamodel.DataModel{*}
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.datamodel.DataModel{*}
        location: ANNOTATION
      where: {}
    seam-java-00240:
      perform:
        hint:
          category-id: null
          effort: null
          links:
          - href: https://access.redhat.com/documentation/en-us/Red_Hat_JBoss_Web_Framework_Kit/2.7/html-single/Seam_Guide/index.html#_events
            title: WFK Seam Guide - Migrating Events
          - href: http://docs.oracle.com/javaee/7/tutorial/cdi-adv005.htm#GKHIC
            title: Java EE - Using Events in CDI Applications
          message: Both Seam 2 and CDI beans may produce and consume events in order
            to communicate with other beans. Unlike method invocation, events allow
            for decoupled architecture with no compile-time dependency. In Seam 2,
            the type of an event is represented by a string value. Observer methods
            may observe one or more event types. Unlike Seam 2, the process of observer
            method resolution is type-safe in CDI. A CDI event is represented by a
            payload (any Java object) and a set of qualifiers. The Java types of the
            event payload together with qualifiers determine which observer methods
            are notified of the event
          tags:
          - seam
          - cdi
          title: Seam API - firing and observing events
      when:
        or:
        - annotation-types: []
          javaclass:
            references: org.jboss.seam.annotations.Observer
          location: ANNOTATION
        - annotation-types: []
          javaclass:
            references: org.jboss.seam.core.Events.{*}
          location: METHOD_CALL
      where: {}
    seam-java-00250:
      perform:
        hint:
          category-id: null
          effort: null
          links:
          - href: http://docs.oracle.com/javaee/7/tutorial/cdi-adv006.htm#GKHJX
            title: Java EE - Interceptor binding
          - href: http://docs.oracle.com/javaee/7/tutorial/interceptors001.htm#GKIGQ
            title: Using Java EE Interceptors
          message: In the Java EE, the concept of interceptors was extracted into
            a separate specification. As a result, not only EJBs but any CDI managed
            beans can benefit from this facility. If you used interceptors in Seam
            2, migration is straightforward. The names and semantics of most of the
            annotations remain unchanged. If you used meta-annotations to bind interceptors
            to your beans in Seam 2, this idea (slightly modified) made it into the
            specification and is now know as an Interceptor binding.
          tags:
          - seam
          - javaee
          title: Seam API - Interceptors
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.intercept.{*}
        location: ANNOTATION
      where: {}
    seam-java-00260:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links:
          - href: http://docs.oracle.com/javaee/7/api/javax/ejb/Asynchronous.html
            title: Java EE API - javax.ejb.Asynchronous
          message: Replace with Java EE annotation `@javax.ejb.Asynchronous`.
          tags:
          - seam
          - javaee
          title: Seam API - Asynchronous annotation
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.async.Asynchronous
        location: ANNOTATION
      where: {}
    seam-java-00270:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: http://docs.oracle.com/javaee/7/api/javax/transaction/Transactional.html
            title: Java EE API - javax.transaction.Transactional
          message: Replace with Java EE annotation `@javax.transaction.Transactional`.
            The usage and transaction types are the same like in Seam API.
          tags:
          - seam
          - javaee
          title: Seam API - org.jboss.seam.annotations.Transactional annotation
      when:
        annotation-types: []
        javaclass:
          references: org.jboss.seam.annotations.Transactional
        location: ANNOTATION
      where: {}
