weblogic-webservices:
  metadata:
    description: This ruleset contains rules to detect WebLogic specific web services
      code, and to assist in the conversion of this code to code that is compatible
      with JBoss EAP.
    sourceTechnologies:
    - id: weblogic
      versionRange: null
    tags:
    - webservice
    targetTechnologies:
    - id: eap
      versionRange: '[6,7)'
  original-file: https://github.com/windup/windup-rulesets/tree/master/rules-reviewed/eap6/weblogic/weblogic-webservices.windup.xml
  rules:
    weblogic-webservices-01000:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/6.4/html-single/development_guide/#chap-JAX-WS_Web_Services
            title: JAX-WS Web Service Clients
          message: This web service stub uses the WebLogic proprietary web service
            implementation class ("weblogic.wsee.jaxrpc.ServiceImpl"). It might have
            been generated by a WebLogic proprietary tool. This should be replaced
            using the standard Java EE JAX-WS framework. It could be regenerated using
            the JBoss web services tools. Please refer to the [JAX-WS web service](https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/6.4/html-single/development_guide/#chap-JAX-WS_Web_Services)
            guide for more information.
          tags:
          - webservice
          - weblogic
          title: WebLogic proprietary web service implementation class
      when:
        annotation-types: []
        javaclass:
          references: weblogic.wsee.jaxrpc.ServiceImpl
        location: INHERITANCE
      where: {}
    weblogic-webservices-02000:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links:
          - href: https://docs.oracle.com/cd/E23943_01/web.1111/e15184/asynch.htm
            title: WebLogic Asynchronous Execution Documentation
          - href: https://access.redhat.com/documentation/en-us/JBoss_Enterprise_Application_Platform/6.4/html-single/Development_Guide/index.html#Develop_a_JAX-WS_Client_Application
            title: Develop a JAX-WS Client Application
          message: The [WebLogic proprietary Asynchronous Web Service Client API](https://docs.oracle.com/cd/E23943_01/web.1111/e15184/asynch.htm)
            should be replaced using calls to the JAX-WS asynchronous API. More information
            is available in the [JBoss EAP documentation](https://access.redhat.com/documentation/en-us/JBoss_Enterprise_Application_Platform/6.4/html-single/Development_Guide/index.html#Develop_a_JAX-WS_Client_Application).
          tags:
          - webservice
          - client
          - weblogic
          title: WebLogic asynchronous web service client
      when:
        annotation-types: []
        javaclass:
          references: weblogic.wsee.async.AsyncPreCallContext
      where: {}
    weblogic-webservices-03000:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links:
          - href: https://access.redhat.com/documentation/en-us/JBoss_Enterprise_Application_Platform/5/html/Web_Services_CXF_User_Guide/sect-Authentication.html
            title: JBoss EAP 5 CXF User Guide
          message: 'Replace proprietary web-service authentication with JAX-WS standard
            calls. To attach authentication with JBoss EAP, simply use the following
            code: ```java URL wsdlURL = new File("resources/jaxws/samples/context/WEB-INF/wsdl/TestEndpoint.wsdl").toURL();
            QName qname = new QName("http://org.jboss.ws/jaxws/context", "TestEndpointService");
            Service service = Service.create(wsdlURL, qname); port = (TestEndpoint)service.getPort(TestEndpoint.class);
            BindingProvider bp = (BindingProvider)port; bp.getRequestContext().put(BindingProvider.USERNAME_PROPERTY,
            "jsmith"); bp.getRequestContext().put(BindingProvider.PASSWORD_PROPERTY,
            "PaSSw0rd"); ```'
          tags:
          - webservice
          - security
          - weblogic
          title: WebLogic proprietary web service authentication
      when:
        annotation-types: []
        javaclass:
          references: weblogic.wsee.connection.transport.http.HttpTransportInfo.setUsername({*})
        location: METHOD_CALL
      where: {}
    weblogic-webservices-04000:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: http://docs.oracle.com/javaee/6/api/javax/xml/ws/WebServiceContext.html
            title: javax.xml.WebServiceContext Documentation
          message: 'This code uses the WebLogic specific class `weblogic.wsee.context.WebServiceContext`.
            This usage will need to be replaced with the Java Enterprise Edition standard
            `javax.xml.WebServiceContext` interface. Example code: ```java @Resource
            private WebServiceContext webServiceContext; ```'
          tags:
          - webservice
          - context
          - weblogic
          title: WebLogic proprietary web services API - weblogic.wsee.context.WebServiceContext
      when:
        annotation-types: []
        javaclass:
          references: weblogic.wsee.context.WebServiceContext
      where: {}
    weblogic-webservices-05000:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links: []
          message: This exception (`weblogic.wsee.context.ContextNotFoundException`)
            is WebLogic specific and can be removed.
          tags:
          - webservice
          - context
          - weblogic
          title: WebLogic proprietary web services API - ContextNotFoundException
      when:
        annotation-types: []
        javaclass:
          references: weblogic.wsee.context.ContextNotFoundException
      where: {}
    weblogic-webservices-06000:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://docs.oracle.com/cd/E13222_01/wls/docs90/webserv/anttasks.html#1039270
            title: Oracle ClientGen Ant Task Reference
          - href: https://access.redhat.com/documentation/en-us/JBoss_Enterprise_Application_Platform/6.4/html-single/Development_Guide/index.html#Develop_a_JAX-WS_Client_Application
            title: EAP 6 development guide - Develop a JAX-WS client
          - href: https://jax-ws.java.net/nonav/2.2.6/docs/ch04.html#tools-wsgen
            title: JAX-WS - wsgen
          - href: https://cxf.apache.org/docs/tools.html
            title: Apache CXF tools
          message: This class has been generated by a WebLogic web service client
            generator (ClientGen). It could be replaced by an equivalent standard
            Java EE technology using for example the EAP 6 wsconsume tool, the wsgen
            tool or the CXF tools.
          tags:
          - webservice
          - client
          - weblogic
          title: WebLogic proprietary web services generated client classes
      when:
        or:
        - annotation-types: []
          javaclass:
            references: weblogic.wsee.tools.clientgen.{*}
        - annotation-types: []
          javaclass:
            references: weblogic.webservice.{*}
      where: {}
    weblogic-webservices-07000:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links:
          - href: https://docs.oracle.com/middleware/11119/wls/WSREF/annotations.htm#i1058163
            title: WebLogic-specific Annotations - Transactional
          - href: https://access.redhat.com/webassets/avalon/d/JBoss_Enterprise_Application_Platform-6-API_Documentation-en-US/files/javadoc/javax/ejb/TransactionAttribute.html
            title: JBoss EAP 6 - API TransactionAttribute
          message: Replace WebLogic proprietary web-service annotation `@Transactional`
            by the standard Java EE annotation `@TransactionAttribute`.
          tags:
          - webservice
          - weblogic
          title: WebLogic proprietary web service annotation @Transactional
      when:
        annotation-types: []
        javaclass:
          references: weblogic.jws.Transactional
        location: ANNOTATION
      where: {}
