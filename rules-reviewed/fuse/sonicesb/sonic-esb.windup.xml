sonic-esb:
  metadata:
    description: This ruleset contains rules that assist in migrating from Sonic ESB
      to Apache Camel.
    sourceTechnologies:
    - id: sonic
      versionRange: null
    tags: []
    targetTechnologies:
    - id: fuse
      versionRange: '[6,)'
  original-file: https://github.com/windup/windup-rulesets/tree/master/rules-reviewed/fuse/sonicesb/sonic-esb.windup.xml
  rules:
    sonic-esb-01000:
      perform:
        classification:
          effort: '0'
          issue-display-mode: detail-only
          links:
          - href: http://documentation.progress.com/output/Sonic/8.0.0/Docs8.0/api/esb_api/com/sonicsw/xq/XQService.html
            title: XQService Javadoc
          tags:
          - sonic-esb
          title: Sonic ESB Service
        hint:
          category-id: mandatory
          effort: '4'
          links: []
          message: Sonic ESB services inherit from XQService. In Camel, this can be
            achieved through the simple Java Bean Camel Component. * [Camel Java Bean
            Component](http://camel.apache.org/bean.html)
          tags:
          - camel
          title: Sonic ESB service - inheritance from com.sonicsw.xq.XQService
      when:
        javaclass:
          location: INHERITANCE
          references: com.sonicsw.xq.XQService
      where: {}
    sonic-esb-02000:
      perform:
        hint:
          category-id: mandatory
          effort: '4'
          links: []
          message: Sonic ESB services leverage the service(XQServiceContext context)
            method to implement business logic. When messages are routed to the service,
            the service(XQServiceContext context) method is executed. In Camel, this
            is achieved by routing messages to the Java Bean via the Camel Route's
            Bean Component syntax. * [Camel Java Bean Component](http://camel.apache.org/bean.html)
            * [Camel Binding Annotations](http://camel.apache.org/parameter-binding-annotations.html)
            Camel's Java Bean Component can leverage annotations annotations on the
            method to specify how Camel Message body values are mapped to the method
            parameters. Additionally, the @Handler annotation can be leveraged to
            setup the default Java Bean method. **For example:** ```java public void
            service(XQServiceContext ctx) throws XQServiceException \{ ... } ``` **Should
            become:** ```java @Handler public void service(@Header messageHeader,
            @Body messageBody, Exchange exchange) \{ ... } ``` * org.apache.camel.Body
            * org.apache.camel.Header * org.apache.camel.Exchange
          tags:
          - sonic-esb
          - camel
          title: Reference to com.sonicsw.xq.XQServiceContext
      when:
        javaclass:
          location: IMPORT
          references: com.sonicsw.xq.XQServiceContext
      where: {}
    sonic-esb-03000:
      perform:
        hint:
          category-id: mandatory
          effort: '4'
          links: []
          message: The XQInitContext is used to receive initialization information
            for the service from Sonic ESB. This is not neccessary for Camel. The
            init() method that receives this object should be replaced with Spring
            Bean property injection. For initialization beyond propery injection,
            leverage Spring's @PostConstruct annotation on this init() method. * [Spring
            @PostConstruct Documentation](http://docs.spring.io/spring/docs/2.5.x/reference/beans.html#beans-postconstruct-and-predestroy-annotations)
            ```java @PostConstruct public void init() \{ //leverage injected properties
            } ```
          tags:
          - sonic-esb
          - spring
          - camel
          title: Reference to com.sonicsw.xq.XQInitContext
      when:
        javaclass:
          location: IMPORT
          references: com.sonicsw.xq.XQInitContext
      where: {}
    sonic-esb-04000:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links: []
          message: Migrate XQInitContext.getParameters to Spring property injection.
          tags:
          - sonic-esb
          - camel
          title: Call of com.sonicsw.xq.XQInitContext.getParameters
      when:
        javaclass:
          location: METHOD_CALL
          references: com.sonicsw.xq.XQInitContext.getParameters{*}
      where: {}
    sonic-esb-05000:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links: []
          message: Migrate XQParameters.getParameter to Spring property injection.
          tags:
          - sonic-esb
          - spring
          - camel
          title: Call of com.sonicsw.xq.XQParameters.getParameter
      when:
        javaclass:
          location: METHOD_CALL
          references: com.sonicsw.xq.XQParameters.getParameter{*}
      where: {}
    sonic-esb-06000:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links: []
          message: Migrate XQParameters to Spring property injection.
          tags:
          - sonic-esb
          - spring
          - camel
          title: Reference to com.sonicsw.xq.XQParameters
      when:
        javaclass:
          location: TYPE
          references: com.sonicsw.xq.XQParameters
      where: {}
    sonic-esb-07000:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links: []
          message: Migrate XQParameterInfo to Spring property injection.
          tags:
          - sonic-esb
          - spring
          - camel
          title: Reference to com.sonicsw.xq.XQParameters
      when:
        javaclass:
          location: TYPE
          references: com.sonicsw.xq.XQParameterInfo
      where: {}
    sonic-esb-08000:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links: []
          message: Migrate to org.apache.camel.Message
          tags:
          - sonic-esb
          - camel
          title: Reference to com.sonicsw.xq.XQMessage
      when:
        javaclass:
          location: TYPE
          references: com.sonicsw.xq.XQMessage
      where: {}
    sonic-esb-09000:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links: []
          message: Migrate to org.apache.camel.Message.getHeader(String name)
          tags:
          - sonic-esb
          - camel
          title: Call of com.sonicsw.xq.XQMessage.getHeaderValue
      when:
        javaclass:
          location: METHOD_CALL
          references: com.sonicsw.xq.XQMessage.getHeaderValue{*}
      where: {}
    sonic-esb-10000:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links: []
          message: Migrate to org.apache.camel.Message.setHeader(String name, Object
            value)
          tags:
          - sonic-esb
          - camel
          title: Call of com.sonicsw.xq.XQMessage.setHeaderValue
      when:
        javaclass:
          location: METHOD_CALL
          references: com.sonicsw.xq.XQMessage.setHeaderValue{*}
      where: {}
    sonic-esb-11000:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links: []
          message: Migrate to org.apache.camel.Message.getHeaders()
          tags:
          - sonic-esb
          - camel
          title: Call of com.sonicsw.xq.XQMessage.getHeaderNames
      when:
        javaclass:
          location: METHOD_CALL
          references: com.sonicsw.xq.XQMessage.getHeaderNames{*}
      where: {}
    sonic-esb-12000:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links: []
          message: Migrate XQPart to an attachment on the org.apache.camel.Message
          tags:
          - sonic-esb
          - camel
          title: Reference to com.sonicsw.xq.XQPart
      when:
        javaclass:
          location: TYPE
          references: com.sonicsw.xq.XQPart
      where: {}
    sonic-esb-13000:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links: []
          message: Migrate to org.apache.camel.Message.getAttachments().size()
          tags:
          - sonic-esb
          - camel
          title: Call of com.sonicsw.xq.XQMessage.getPartCount
      when:
        javaclass:
          location: METHOD_CALL
          references: com.sonicsw.xq.XQMessage.getPartCount{*}
      where: {}
    sonic-esb-14000:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links: []
          message: Migrate to org.apache.camel.Message.getAttachment(String id)
          tags:
          - sonic-esb
          - camel
          title: Call of com.sonicsw.xq.XQMessage.getPart
      when:
        javaclass:
          location: METHOD_CALL
          references: com.sonicsw.xq.XQMessage.getPart({*}
      where: {}
    sonic-esb-15000:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links: []
          message: Migrate to [Apache SLF4J](http://www.slf4j.org).
          tags:
          - sonic-esb
          - slf4j
          - camel
          title: Reference to com.sonicsw.xq.XQLog
      when:
        javaclass:
          location: TYPE
          references: com.sonicsw.xq.XQLog
      where: {}
    sonic-esb-16000:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links: []
          message: Create a custom ServiceException class, extending Exception. The
            documentation below explains exception handling in Camel. * [Camel Exception
            Handling](http://camel.apache.org/exception-clause.html)
          tags:
          - sonic-esb
          - camel
          title: Reference to com.sonicsw.xq.XQServiceException
      when:
        javaclass:
          location: TYPE
          references: com.sonicsw.xq.XQServiceException
      where: {}
    sonic-esb-17000:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links: []
          message: Correlation is handled several ways in Camel. Read the article
            below. * [Camel Exception Handling](http://camel.apache.org/correlation-identifier.html)
          tags:
          - sonic-esb
          - camel
          title: Call of com.sonicsw.xq.XQMessage.getCorrelationId
      when:
        javaclass:
          location: METHOD_CALL
          references: com.sonicsw.xq.XQMessage.getCorrelationId{*}
      where: {}
    sonic-esb-18000:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links: []
          message: This indicates that the Sonic ESB Service is routing messages to
            a [1...N] endpoints. To achieve this in Camel, take the business logic
            in the service, and populate a header property with an array of target
            enpoints. Next, create a Recipient List processor to route the message
            to N endpoints. * [Camel Recipient List](http://camel.apache.org/recipientlist-annotation.html)
          tags:
          - sonic-esb
          - camel
          title: Call of com.sonicsw.xq.XQAddressFactory.createEndpointAddress
      when:
        javaclass:
          location: METHOD_CALL
          references: com.sonicsw.xq.XQAddressFactory.createEndpointAddress{*}
      where: {}
    sonic-esb-19000:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links: []
          message: Sonic ESB uses the addOutgoing method to set the outgoing message.
            This is achieved in Camel by either modifying the @Body parameter in the
            Java Bean Component method, or literally setting a new message to the
            Exchange. * [Camel Setting Response](http://camel.apache.org/using-getin-or-getout-methods-on-exchange.html)
          tags:
          - sonic-esb
          - camel
          title: Call of com.sonicsw.xq.XQServiceContext.addOutgoing
      when:
        javaclass:
          location: METHOD_CALL
          references: com.sonicsw.xq.XQServiceContext.addOutgoing{*}
      where: {}
    sonic-esb-20000:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links: []
          message: Migrate to org.apache.camel.Exchange
          tags:
          - sonic-esb
          - camel
          title: Reference to com.sonicsw.xq.XQEnvelope
      when:
        javaclass:
          location: IMPORT
          references: com.sonicsw.xq.XQEnvelope
      where: {}
    sonic-esb-21000:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links: []
          message: Migrate to org.apache.camel.Message.getIn()
          tags:
          - sonic-esb
          - camel
          title: Call of com.sonicsw.xq.XQEnvelope.getMessage
      when:
        javaclass:
          location: METHOD_CALL
          references: com.sonicsw.xq.XQEnvelope.getMessage{*}
      where: {}
