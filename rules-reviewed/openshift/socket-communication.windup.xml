socket-communication:
  metadata:
    description: This ruleset detects the use of socket communication by the client
      or server, which may be problematic when migrating an application to a cloud
      environment.
    sourceTechnologies:
    - id: java
      versionRange: null
    - id: java-ee
      versionRange: null
    tags:
    - socket
    targetTechnologies:
    - id: cloud-readiness
      versionRange: null
  original-file: https://github.com/windup/windup-rulesets/tree/master/rules-reviewed/openshift/socket-communication.windup.xml
  rules:
    socket-communication-00000:
      perform:
        iteration:
          hint:
            category-id: cloud-optional
            effort: '5'
            links:
            - href: https://12factor.net/backing-services
              title: Twelve-factor app - Backing services
            message: "Java sockets are internal endpoints of two-way communications.\
              \ They are defined by an IP address, port, and protocol (TCP/UDP).\n\
              \n                    Socket communication is not suitable for a cloud\
              \ environment because it requires fixed communication with a target\
              \ host.\n\n                    Recommendation: Use Java EE standard\
              \ or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing\
              \ service interactions."
            tags:
            - socket
            title: Socket communication
      when:
        or:
        - annotation-types: []
          javaclass:
            references: java.net.{socketclass}{*}
        - annotation-types: []
          javaclass:
            references: java.net.ServerSocket{*}
        - annotation-types: []
          javaclass:
            references: java.nio.channels.AsynchronousServerSocketChannel{*}
        - annotation-types: []
          javaclass:
            references: java.nio.channels.ServerSocketChannel{*}
      where:
        socketclass: (Socket|MulticastSocket|DatagramSocket|InetSocketAddress)
    socket-communication-00001:
      perform:
        iteration:
          hint:
            category-id: cloud-optional
            effort: '5'
            links:
            - href: https://12factor.net/backing-services
              title: Twelve-factor app - Backing services
            message: "Java NIO channels provide bulk data transfer to and from NIO\
              \ buffers. They can be synchronously and asynchronously read and written.\n\
              \n                    Channels are not suitable for a cloud environment\
              \ because they are not a reliable or scalable way to interact with other\
              \ systems.\n\n                    Recommendation: Use Java EE standard\
              \ or loosely coupled protocols such as JMS, JAX-RS, or JAX-WS for backing\
              \ service interactions."
            tags:
            - socket
            title: Java NIO channel
      when:
        annotation-types: []
        javaclass:
          references: java.nio.channels.{niochannelclass}{*}
      where:
        niochannelclass: (NetworkChannel|MulticastChannel|DatagramChannel|AsynchronousSocketChannel|SocketChannel)
