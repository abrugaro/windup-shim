hibernate51-53:
  metadata:
    description: This ruleset provides analysis of applications that use Hibernate
      5.1 and may require individual attention when migrating to Hibernate 5.3.
    sourceTechnologies:
    - id: hibernate
      versionRange: (,5.1]
    tags: []
    targetTechnologies:
    - id: hibernate
      versionRange: '[5.3,)'
    - id: eap
      versionRange: '[7,8)'
  original-file: https://github.com/windup/windup-rulesets/tree/master/rules-reviewed/eap7/eap71/hibernate51-53.windup.xml
  rules:
    hibernate51-53-00001:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#hibernate_51_compatiblity_transformer
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          message: '`org.hibernate.engine.spi.SessionImplementor` parameter has to
            be changed to `org.hibernate.engine.spi.SharedSessionContractImplementor`.'
          tags:
          - hibernate
          title: Hibernate 5.3 - SessionImplementor parameter changed to SharedSessionContractImplementor
      when:
        javaclass:
          location: METHOD_CALL
          references: '{methods_param}({*}org.hibernate.engine.spi.SessionImplementor{*})'
      where:
        methods_param: (org.hibernate.usertype.UserVersionType.next|org.hibernate.type.VersionType.next|org.hibernate.type.SingleColumnType.set|org.hibernate.type.AbstractStandardBasicType.set|org.hibernate.type.Type.resolve|org.hibernate.usertype.UserVersionType.seed|org.hibernate.type.VersionType.seed|org.hibernate.collection.spi.PersistentCollection.setCurrentSession|org.hibernate.type.ProcedureParameterNamedBinder.nullSafeSet|org.hibernate.type.Type.nullSafeSet|org.hibernate.usertype.UserType.nullSafeSet|org.hibernate.usertype.CompositeUserType.nullSafeSet|org.hibernate.type.Type.beforeAssemble|org.hibernate.type.AbstractStandardBasicType.nullSafeGet|org.hibernate.type.Type.nullSafeGet|org.hibernate.type.SingleColumnType.nullSafeGet|org.hibernate.usertype.UserType.nullSafeGet|org.hibernate.usertype.CompositeUserType.nullSafeGet|org.hibernate.type.Type.replace|org.hibernate.usertype.CompositeUserType.replace|org.hibernate.usertype.UserCollectionType.replaceElements|org.hibernate.collection.spi.PersistentCollection.unsetSession|org.hibernate.type.Type.hydrate|org.hibernate.type.Type.semiResolve|org.hibernate.usertype.CompositeUserType.assemble|org.hibernate.type.Type.assemble|org.hibernate.usertype.UserCollectionType.instantiate|org.hibernate.usertype.CompositeUserType.disassemble|org.hibernate.type.Type.disassemble|org.hibernate.type.ProcedureParameterExtractionAware.extract|org.hibernate.type.Type.isDirty|org.hibernate.type.Type.isModified|org.hibernate.type.SingleColumnType.get|org.hibernate.type.AbstractStandardBasicType.get|org.hibernate.usertype.UserCollectionType.wrap)
    hibernate51-53-00100:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          message: change reference to hibernate-java8 to hibernate-core (since hibernate-java8
            has been merged into hibernate-core module)
          tags:
          - hibernate
          title: Hibernate 5.3 - hibernate-java8 module has been merged into hibernate-core
            and the Java 8 date/time types are now natively supported.
      when:
        artifact:
          artifactId: '{substitution}'
          groupId: org.hibernate
        not:
          artifact:
            artifactId: hibernate-core
            groupId: org.hibernate
      where:
        substitution: (hibernate-java8|hibernate-entitymanager)
    hibernate51-53-00300:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#exception_handling_changes_between_51_53
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          message: "If the `SessionFactory` is built via Hibernate\u2019s native bootstrapping\
            \ and `org.hibernate.HibernateException` or a subclass is referenced by\
            \ the application then set `hibernate.native_exception_handling_51_compliance`\
            \ configuration property to `true`."
          tags:
          - hibernate
          title: Hibernate 5.3 - Exception Handling
      when:
        javaclass:
          location: IMPORT
          references: org.hibernate.{className}
      where:
        className: (boot.archive.spi.ArchiveException|envers.exception.AuditException|jdbc.BatchFailedException|cache.CacheException|CallbackException
          |boot.registry.classloading.spi.ClassLoadingException|tool.schema.spi.CommandAcceptanceException|bytecode.enhance.spi.EnhancementException
          |tuple.entity.EntityMetamodel.ValueGenerationStrategyException|event.service.spi.EventListenerRegistrationException|HibernateError
          |id.IdentifierGenerationException|boot.model.naming.IllegalIdentifierException|tool.hbm2ddl.ImportScriptException
          |boot.spi.InFlightMetadataCollector.DuplicateSecondaryTableException|InstantiationException|secure.spi.IntegrationException|JDBCException
          |engine.jndi.JndiException|engine.jndi.JndiNameException|engine.transaction.jta.platform.spi.JtaPlatformException|LazyInitializationException
          |resource.transaction.LocalSynchronizationException|dialect.lock.LockingStrategyException|MappingException|loader.MultipleBagFetchException
          |procedure.NamedParametersNotSupportedException|result.NoMoreReturnsException|loader.custom.NonUniqueDiscoveredSqlAliasException
          |NonUniqueObjectException|NonUniqueResultException|procedure.NoSuchParameterException|bytecode.spi.NotInstrumentedException
          |service.NullServiceException|resource.transaction.NullSynchronizationException|procedure.ParameterMisuseException
          |engine.query.ParameterRecognitionException|procedure.ParameterStrategyException|PersistentObjectException|property.access.spi.PropertyAccessBuildingException
          |PropertyAccessException|property.access.spi.PropertyAccessSerializationException|PropertyValueException|QueryException
          |loader.plan.spi.QuerySpaceUidNotRegisteredException|ResourceClosedException|tool.schema.extract.spi.SchemaExtractionException|tool.schema.spi.SchemaManagementException
          |type.SerializationException|service.spi.ServiceException|SessionException|StaleStateException|boot.registry.selector.spi.StrategySelectionException
          |context.TenantIdentifierMismatchException|jdbc.TooManyRowsAffectedException|TransactionException|resource.transaction.TransactionRequiredForJoinException
          |TransientObjectException|TypeMismatchException|cache.spi.access.UnknownAccessTypeException|persister.spi.UnknownPersisterException|UnknownProfileException
          |service.UnknownServiceException|service.UnknownUnwrapTypeException|UnresolvableObjectException|UnsupportedLockAttemptException|WrongClassException)
    hibernate51-53-00400:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          message: '`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getDefaultQueryResultsCache()`
            should be used instead of `SessionFactoryImplementor.getQueryCache()`
            method.'
          quickfix:
            name: SessionFactoryImplementor.getQueryCache
            replacement: getCache().getDefaultQueryResultsCache()
            search: getQueryCache()
            type: REPLACE
          tags:
          - hibernate
          title: Hibernate 5.3 - SessionFactoryImplementor.getQueryCache() method
            removed
      when:
        javaclass:
          location: METHOD_CALL
          references: org.hibernate.engine.spi.SessionFactoryImplementor.getQueryCache()
      where: {}
    hibernate51-53-00401:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          message: '`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getDefaultQueryResultsCache(String
            regionName)` should be used instead of `SessionFactoryImplementor.getQueryCache(String
            regionName)` method.'
          quickfix:
            name: SessionFactoryImplementor.getQueryCache
            replacement: getCache().getQueryResultsCache(
            search: getQueryCache(
            type: REPLACE
          tags:
          - hibernate
          title: Hibernate 5.3 - SessionFactoryImplementor.getQueryCache(String regionName)
            method removed
      when:
        javaclass:
          location: METHOD_CALL
          references: org.hibernate.engine.spi.SessionFactoryImplementor.getQueryCache({*}String{*})
      where: {}
    hibernate51-53-00402:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          message: '`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getTimestampsCache()`
            should be used instead of `SessionFactoryImplementor.getUpdateTimestampsCache()`
            method.'
          quickfix:
            name: SessionFactoryImplementor.getUpdateTimestampsCache
            replacement: getCache().getTimestampsCache()
            search: getUpdateTimestampsCache()
            type: REPLACE
          tags:
          - hibernate
          title: Hibernate 5.3 - SessionFactoryImplementor.getUpdateTimestampsCache()
            method removed
      when:
        javaclass:
          location: METHOD_CALL
          references: org.hibernate.engine.spi.SessionFactoryImplementor.getUpdateTimestampsCache()
      where: {}
    hibernate51-53-00403:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          message: '`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getRegion(String
            regionName)` should be used instead of `SessionFactoryImplementor.getSecondLevelCacheRegion(String
            regionName)` method.'
          quickfix:
            name: SessionFactoryImplementor.getSecondLevelCacheRegion
            replacement: getCache().getRegion(
            search: getSecondLevelCacheRegion(
            type: REPLACE
          tags:
          - hibernate
          title: Hibernate 5.3 - SessionFactoryImplementor.getSecondLevelCacheRegion(String
            regionName) method removed
      when:
        javaclass:
          location: METHOD_CALL
          references: org.hibernate.engine.spi.SessionFactoryImplementor.getSecondLevelCacheRegion({*}String{*})
      where: {}
    hibernate51-53-00404:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          message: 'Depending on the type of region, the appropriate method should
            be used instead: * For an entity cache region, `org.hibernate.engine.spi.SessionFactoryImplementor.getMetamodel().entityPersister(
            entityName ).getCacheAccessStrategy()` should be used instead * For a
            collection region, `org.hibernate.engine.spi.SessionFactoryImplementor.getMetamodel().collectionPersister(
            role ).getCacheAccessStrategy()` should be used instead * For a natural
            ID region, `org.hibernate.engine.spi.SessionFactoryImplementor.getMetamodel().entityPersister(
            entityName ).getNaturalIdCacheAccessStrategy()` should be used instead'
          tags:
          - hibernate
          title: Hibernate 5.3 - SessionFactoryImplementor.getSecondLevelCacheRegionAccessStrategy(String
            regionName) method removed
      when:
        javaclass:
          location: METHOD_CALL
          references: org.hibernate.engine.spi.SessionFactoryImplementor.getSecondLevelCacheRegionAccessStrategy({*}String{*})
      where: {}
    hibernate51-53-00405:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          message: '`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getRegion(String
            regionName)` should be used instead of `SessionFactoryImplementor.getNaturalIdCacheRegion(String
            regionName)` method.'
          quickfix:
            name: SessionFactoryImplementor.getNaturalIdCacheRegion
            replacement: getCache().getRegion(
            search: getNaturalIdCacheRegion(
            type: REPLACE
          tags:
          - hibernate
          title: Hibernate 5.3 - SessionFactoryImplementor.getNaturalIdCacheRegion(String
            regionName) method removed
      when:
        javaclass:
          location: METHOD_CALL
          references: org.hibernate.engine.spi.SessionFactoryImplementor.getNaturalIdCacheRegion({*}String{*})
      where: {}
    hibernate51-53-00406:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          message: '`org.hibernate.engine.spi.SessionFactoryImplementor.getMetamodel().entityPersister(
            entityName ).getNaturalIdCacheAccessStrategy()` should be used instead
            of `SessionFactoryImplementor.getNaturalIdCacheRegionAccessStrategy(String
            regionName)` method.'
          quickfix:
            name: SessionFactoryImplementor.getNaturalIdCacheRegionAccessStrategy
            replacement: getMetamodel().entityPersister( entityName ).getNaturalIdCacheAccessStrategy(
            search: getNaturalIdCacheRegionAccessStrategy(
            type: REPLACE
          tags:
          - hibernate
          title: Hibernate 5.3 - SessionFactoryImplementor.getNaturalIdCacheRegionAccessStrategy(String
            regionName) method removed
      when:
        javaclass:
          location: METHOD_CALL
          references: org.hibernate.engine.spi.SessionFactoryImplementor.getNaturalIdCacheRegionAccessStrategy({*}String{*})
      where: {}
    hibernate51-53-00407:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          message: '`org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getCacheRegionNames()`
            should be used to obtain all cache region names, then `org.hibernate.engine.spi.SessionFactoryImplementor.getCache().getRegion(String
            regionName)` should be used to look up each region.'
          tags:
          - hibernate
          title: Hibernate 5.3 - SessionFactoryImplementor.getAllSecondLevelCacheRegions()
            method removed
      when:
        javaclass:
          location: METHOD_CALL
          references: org.hibernate.engine.spi.SessionFactoryImplementor.getAllSecondLevelCacheRegions()
      where: {}
    hibernate51-53-00500:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          - href: https://docs.jboss.org/hibernate/orm/5.3/javadocs/org/hibernate/cache/spi/RegionFactory.html
            title: Javadoc for org.hibernate.cache.spi.RegionFactory
          message: Review usage of classes in `org.hibernate.cache.spi.RegionFactory`,
            as SPIs for this class has changed. See Javadoc for `org.hibernate.cache.spi.RegionFactory`
            for details.
          tags:
          - hibernate
          title: Hibernate 5.3 - RegionFactory usage
      when:
        javaclass:
          location: IMPORT
          references: org.hibernate.{className}
      where:
        className: (cache.RegionFactory|cache.spi.RegionFactory|cache.spi.AbstractRegionFactory|testing.cache.CachingRegionFactory|cache.spi.support.RegionFactoryTemplate|cache.ehcache.EhCacheRegionFactory|cache.infinispan.InfinispanRegionFactory|cache.infinispan.JndiInfinispanRegionFactory|cache.internal.NoCachingRegionFactory|cache.ehcache.SingletonEhCacheRegionFactory)
    hibernate51-53-00600:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://github.com/hibernate/hibernate-orm/blob/5.3/migration-guide.adoc#second-level-cache-provider-spi-changes
            title: 'Hibernate ORM 5.3 Migration Guide: Second-level cache provider
              SPI changes'
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#hibernate_orm_5_3_features
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          - href: https://hibernate.atlassian.net/browse/HHH-11356
            title: 'HHH-11356: Adjust the 2nd-Cache SPIs to better reflect supported
              uses'
          message: One potential upgrade concern is any custom `org.hibernate.cache.spi.QueryCacheFactory`
            implementations. `org.hibernate.cache.spi.QueryCacheFactory` was meant
            as a means to allow service providers the ability to define query result
            caching, generally with more stale-tolerant query result invalidation
            handling. However, the contract also bound it to the old second level
            cache contracts so they had to be updated. Its responsibilities also changed
            so we also decided to "rename it" to `org.hibernate.cache.spi.TimestampsCacheFactory`.
            Details can be found in HHH-11356 JIRA issue (link below).
          tags:
          - hibernate
          title: Hibernate 5.3 - org.hibernate.cache.spi.QueryCacheFactory implementations
      when:
        javaclass:
          location: IMPLEMENTS_TYPE
          references: org.hibernate.cache.spi.QueryCacheFactory
      where: {}
    hibernate51-53-00700:
      perform:
        hint:
          category-id: optional
          effort: '1'
          links:
          - href: https://github.com/hibernate/hibernate-orm/blob/5.3/migration-guide.adoc#second-level-cache-provider-spi-changes
            title: 'Hibernate ORM 5.3 Migration Guide: Second-level cache provider
              SPI changes'
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#hibernate_orm_5_3_features
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          - href: https://hibernate.atlassian.net/browse/HHH-11356
            title: 'HHH-11356: Adjust the 2nd-Cache SPIs to better reflect supported
              uses'
          message: A change to be aware of is accessing cache entries via `SecondLevelCacheStatistics.getEntries()`
            and `NaturalIdCacheStatistics.getEntries()`. These methods have been deprecated,
            however the new caching SPI does not really require caching providers
            to support this. As of Hibernate 5.3 these methods inherently return an
            empty Map (`Collections#emptyMap`). This has always been something that
            providers did not implement "correctly" anyway. Details can be found in
            HHH-11356 JIRA issue (link below).
          tags:
          - hibernate
          title: 'Hibernate 5.3 - SecondLevelCacheStatistics.getEntries() and NaturalIdCacheStatistics.getEntries():
            deprecated methods'
      when:
        javaclass:
          location: METHOD_CALL
          references: org.hibernate.stat.{interfaces}.getEntries()
      where:
        interfaces: (SecondLevelCacheStatistics|NaturalIdCacheStatistics)
    hibernate51-53-00701:
      perform:
        iteration:
          perform:
            hint:
              category-id: optional
              effort: '1'
              links:
              - href: https://github.com/hibernate/hibernate-orm/blob/5.3/migration-guide.adoc#second-level-cache-provider-spi-changes
                title: 'Hibernate ORM 5.3 Migration Guide: Second-level cache provider
                  SPI changes'
              - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#hibernate_orm_5_3_features
                title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to
                  Hibernate ORM 5.3'
              - href: https://hibernate.atlassian.net/browse/HHH-11356
                title: 'HHH-11356: Adjust the 2nd-Cache SPIs to better reflect supported
                  uses'
              message: A change to be aware of is accessing cache entries via `NaturalIdCacheStatistics.getEntries()`.
                This method has been deprecated, however the new caching SPI does
                not really require caching providers to support this. As of Hibernate
                5.3 this method inherently return an empty Map (`Collections#emptyMap`).
                This has always been something that providers did not implement "correctly"
                anyway. Details can be found in HHH-11356 JIRA issue (link below).
              tags:
              - hibernate
              title: Hibernate 5.3 - NaturalIdCacheStatistics.getEntries() deprecated
                method
          when:
            javaclass:
              location: IMPLEMENTS_TYPE
              references: org.hibernate.stat.NaturalIdCacheStatistics
      when:
        javaclass:
          location: METHOD
          references: '{*}.getEntries()'
      where: {}
    hibernate51-53-00702:
      perform:
        iteration:
          perform:
            hint:
              category-id: optional
              effort: '1'
              links:
              - href: https://github.com/hibernate/hibernate-orm/blob/5.3/migration-guide.adoc#second-level-cache-provider-spi-changes
                title: 'Hibernate ORM 5.3 Migration Guide: Second-level cache provider
                  SPI changes'
              - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#hibernate_orm_5_3_features
                title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to
                  Hibernate ORM 5.3'
              - href: https://hibernate.atlassian.net/browse/HHH-11356
                title: 'HHH-11356: Adjust the 2nd-Cache SPIs to better reflect supported
                  uses'
              message: A change to be aware of is accessing cache entries via `SecondLevelCacheStatistics.getEntries()`.
                This method has been deprecated, however the new caching SPI does
                not really require caching providers to support this. As of Hibernate
                5.3 these methods inherently return an empty Map (`Collections#emptyMap`).
                This has always been something that providers did not implement "correctly"
                anyway. Details can be found in HHH-11356 JIRA issue (link below).
              tags:
              - hibernate
              title: Hibernate 5.3 - SecondLevelCacheStatistics.getEntries() deprecated
                method
          when:
            javaclass:
              location: IMPLEMENTS_TYPE
              references: org.hibernate.stat.SecondLevelCacheStatistics
      when:
        javaclass:
          location: METHOD
          references: '{*}.getEntries()'
      where: {}
    hibernate51-53-00800:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          - href: http://docs.jboss.org/hibernate/orm/5.3/javadocs/
            title: Hibernate 5.3 JavaDoc
          message: The SPIs in the `org.hibernate.{packages}` package have changed.
            Any custom classes using those SPIs will need to be reviewed and updated.
            See Javadoc for these packages for details.
          tags:
          - hibernate
          title: Hibernate 5.3 - SPI in package org.hibernate.{packages} changed
      when:
        javaclass:
          location: IMPORT
          references: org.hibernate.{packages}.{*}
      where:
        packages: (persister|tuple)
    hibernate51-53-01000:
      perform:
        iteration:
          hint:
            category-id: mandatory
            effort: '1'
            links:
            - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#schema_management_tooling_changes_71
              title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
                ORM 5.3'
            message: Define `hibernate.default_schema` or `hibernate.default_catalog`
              (whichever is used by the selected dialect), or, alternatively, set
              `hibernate.hbm2ddl.jdbc_metadata_extraction_strategy=individually`.
            tags:
            - hibernate
            title: Hibernate 5.3 - default_schema or default_catalog must be defined
              or set jdbc_metadata_extraction_strategy
          over: wrong_files
      when:
        and:
        - xmlfile:
            as: persistence_files
            matches: //s:persistence-unit/s:provider[starts-with(text(), 'org.hibernate')]
            namespace:
              prefix: s
              uri: http://java.sun.com/xml/ns/persistence
        - xmlfile:
            as: wrong_files
            from: persistence_files
            matches: //s:properties[count(s:property[@name='hibernate.default_schema'])=0
              and count(s:property[@name='hibernate.default_catalog'])=0]
            namespace:
              prefix: s
              uri: http://java.sun.com/xml/ns/persistence
      where: {}
    hibernate51-53-01001:
      perform:
        iteration:
          hint:
            category-id: potential
            effort: '1'
            links:
            - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#schema_management_tooling_changes_71
              title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
                ORM 5.3'
            message: If the application uses Hibernate, please define `hibernate.default_schema`
              or `hibernate.default_catalog` (whichever is used by the selected dialect),
              or, alternatively, set `hibernate.hbm2ddl.jdbc_metadata_extraction_strategy=individually`.
            tags:
            - hibernate
            title: Hibernate 5.3 - default_schema or default_catalog must be defined
              or set jdbc_metadata_extraction_strategy
          over: wrong_files
      when:
        xmlfile:
          as: wrong_files
          from: persistence_files
          matches: //s:properties[count(s:property[@name='hibernate.default_schema'])=0
            and count(s:property[@name='hibernate.default_catalog'])=0]
          namespace:
            prefix: s
            uri: http://java.sun.com/xml/ns/persistence
      where: {}
    hibernate51-53-01100:
      perform:
        hint:
          category-id: potential
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#hibernate_orm_5_3_features
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          message: Applications using the `@TableGenerator` should set the `hibernate.id.generator.stored_last_used`
            configuration property to `false`.
          tags:
          - hibernate
          title: Hibernate 5.3 - @TableGenerator changes interpretation
      when:
        javaclass:
          location: IMPORT
          references: javax.persistence.TableGenerator
      where: {}
    hibernate51-53-01200:
      perform:
        hint:
          category-id: mandatory
          effort: '1'
          links:
          - href: https://access.redhat.com/documentation/en-us/red_hat_jboss_enterprise_application_platform/7.2/html-single/migration_guide/#migrating_from_hibernate_5_1_to_5_3
            title: 'Red Hat JBoss EAP 7.2: Migrating from Hibernate ORM 5.1 to Hibernate
              ORM 5.3'
          message: Any references to `org.hibernate.{className}.getType()` must be
            replaced with `org.hibernate.{className}.getHibernateType()`.
          quickfix:
            name: HibernateQueryParametergetType
            replacement: getHibernateType
            search: getType
            type: REPLACE
          tags:
          - hibernate
          title: Hibernate 5.3 - QueryParameter.getType() renamed
      when:
        javaclass:
          references: org.hibernate.{className}.getType({*})
      where:
        className: (engine.query.spi.NamedParameterDescriptor|engine.query.spi.OrdinalParameterDescriptor|query.procedure.internal.ProcedureParameterImpl|query.internal.QueryParameterImpl|query.internal.QueryParameterNamedImpl)
