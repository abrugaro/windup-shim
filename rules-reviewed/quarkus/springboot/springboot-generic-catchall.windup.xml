springboot-generic-catchall:
  metadata:
    description: This ruleset provides analysis of generic Spring components that
      may require individual attention when migrating to Quarkus.
    phase: PostMigrationRulesPhase
    sourceTechnologies:
    - id: springboot
      versionRange: null
    tags: []
    targetTechnologies:
    - id: quarkus
      versionRange: null
  original-file: https://github.com/windup/windup-rulesets/tree/master/rules-reviewed/quarkus/springboot/springboot-generic-catchall.windup.xml
  rules:
    springboot-generic-catchall-00100:
      perform:
        iteration:
          perform:
            hint:
              category-id: potential
              effort: '5'
              links:
              - href: https://quarkus.io/guides/
                title: Quarkus - Guides
              message: If the application declares explicitly or uses any of the feature
                provided by the Spring `{group}:{artifact}` component, then check
                if there is a Quarkus Extensions with Spring API compatibility for
                the Spring `{artifact}` component. If yes, then replace the `{group}:{artifact}`
                dependency with the Quarkus extension. If no, consider rewrite the
                code that relies on this dependency leveraging the Quarkus Guides
                linked below. Otherwise, if the application hasn't got this explicit
                Spring `{group}:{artifact}` component dependency, it has been added
                transitively by another Spring component. Once the dependant Spring
                component will be removed, this issue will be fixed as well.
              tags:
              - catchall
              title: Spring component {artifact} requires investigation
          when:
            has-hint: true
      when:
        dependency:
          artifactId: '{artifact}'
          groupId: '{group}'
      where:
        artifact: .*
        group: (org.spring)(.*)?
