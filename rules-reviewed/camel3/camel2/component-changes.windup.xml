component-changes:
  metadata:
    description: XML Rules for Camel endpoints that have had one or more options removed
    sourceTechnologies:
    - id: camel
      versionRange: '[2,3)'
    tags: []
    targetTechnologies:
    - id: camel
      versionRange: '[3,)'
  original-file: https://github.com/windup/windup-rulesets/tree/master/rules-reviewed/camel3/camel2/component-changes.windup.xml
  rules:
    component-changes-00019:
      perform:
        hint:
          category-id: mandatory
          effort: '3'
          links:
          - href: https://camel.apache.org/manual/latest/camel-3-migration-guide.html#_kafka
            title: 'Camel 3 - Migration Guide: Kafka'
          message: The `org.apache.camel:camel-kafka` component has removed the options
            `bridgeEndpoint` and `circularEndpointDetection` as they are no longer
            needed because the component is acting as bridging would work on Camel
            2.x. In other words camel-kafka will send messages to the topic from the
            endpoint uri. To override this use the KafkaConstants.OVERRIDE_TOPIC header
            with the new topic. See more details in the camel-kafka component documentation.
          tags: []
          title: The `org.apache.camel:camel-kafka` component has removed the options
            `bridgeEndpoint` and `circularEndpointDetection`
      when:
        or:
        - xmlfile:
            matches: //*/c:to/@uri[windup:matches(self::node(), 'kafka:{*}{options}{*}')]
            namespace:
              prefix: c
              uri: http://camel.apache.org/schema/spring
        - xmlfile:
            matches: //*/c:to/@uri[windup:matches(self::node(), 'kafka:{*}{options}{*}')]
            namespace:
              prefix: c
              uri: http://camel.apache.org/schema/blueprint
        - filecontent:
            filename: '{*}.java'
            pattern: .to("kafka:{[^"]+}{options}={*}
        - javaclass:
            location: METHOD_CALL
            references: org.apache.camel.component.kafka.KafkaConfiguration.{method}({*})
      where:
        method: (setBridgeEndpoint|setCircularTopicDetection)
        options: (circularTopicDetection|bridgeEndpoint)
